from telethon import events
from telethon.tl.custom import Button
from config import BOT
import os
from config import SUDO_USERS 
import heroku3
import logging
import asyncio

START_OP = [
    [Button.url("·¥Ä·¥Ö·¥Ö ·¥ç·¥á ‚ÜóÔ∏è", "https://t.me/BillaGuardianBot?startgroup=true&admin=delete_messages")],
    [Button.url("Íú±·¥ú·¥ò·¥ò·¥è Ä·¥õ", "https://t.me/ignite_chatz"), Button.url("·¥Ñ ú·¥Ä…¥…¥·¥á ü", "https://t.me/BillaSpace")]
]

@BOT.on(events.NewMessage(pattern="/start"))
async def start(event):
    KEX = await event.client.get_me()
    bot_name = KEX.first_name
    TEXT = f"""
<b>·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è  ô…™ ü ü·¥Ä …¢·¥ú·¥Ä Ä·¥Ö…™·¥Ä…¥  ô·¥è·¥õ ‚ö°Ô∏è</b>
<b><u>…™'·¥ç  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò‚ÄôÍú± Íú± ú…™·¥á ü·¥Ö ·¥Ä…¢·¥Ä…™…¥Íú±·¥õ Íú±·¥ò·¥Ä·¥ç, …¥s“ì·¥° …™·¥ç·¥Ä…¢·¥ás, ·¥ú…¥·¥°·¥Ä…¥·¥õ·¥á·¥Ö ·¥ç·¥á·¥Ö…™·¥Ä, Íú±…¥·¥á·¥Ä·¥ã è ·¥çs…¢ ·¥á·¥Ö…™·¥õÍú± & ·¥ç·¥ú·¥Ñ ú ·¥ç·¥è Ä·¥á ·¥ús·¥á /help ·¥Ñ·¥ç·¥Ö ·¥õ·¥è ·¥ã…¥·¥è·¥° ·¥Ä ü ü ·¥Ñ·¥è Ä·¥á “ì·¥ú…¥·¥Ñ·¥õ…™·¥è…¥s.</u></b>
<blockquote><b>‚Ä¢ ·¥ç·¥á·¥Ö…™·¥Ä …¢·¥ú·¥Ä Ä·¥Öñ†å</b>
<b>‚Ä¢ …¥s“ì·¥°-·¥Ñ·¥è…¥·¥õ·¥á…¥·¥õ Íú∞…™ ü·¥õ·¥á Ä</b>
<b>‚Ä¢ ·¥Ö·¥á ü·¥á·¥õ·¥ás ·¥á·¥Ö…™·¥õ·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥ás</b>
<b>‚Ä¢ ·¥Ö·¥á ü·¥á·¥õ·¥ás s ü·¥Ä…¥…¢“ì·¥ú ü/…¢·¥Ä·¥Ä ü…™ ·¥°·¥è Ä·¥Ös</b>
<b>‚Ä¢ ·¥Ä·¥ú·¥õ·¥è ·¥ç·¥á·¥Ö…™·¥Ä  Ä·¥á·¥ç·¥è·¥†·¥Ä ü ·¥õ ú Ä·¥è·¥ú…¢ ú /setdelay ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö</b></blockquote>
<blockquote><b>‚úÖ ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥ÄÍú± ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ ·¥õ·¥è ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥ò Ä·¥è·¥õ·¥á·¥Ñ·¥õ…™·¥è…¥.</b>
<b>/help “ì·¥è Ä ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥ÖÍú±</b></blockquote>
"""
    await event.reply(TEXT, buttons=START_OP, parse_mode='html')

@BOT.on(events.NewMessage(pattern='/update'))
async def update_and_restart(event):
    # Check if the user is a SUDO_USER
    if event.sender_id not in SUDO_USERS:
        await event.reply(" è·¥è·¥ú ·¥Ä Ä·¥á …¥·¥è·¥õ ·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.")
        return

    response = await event.reply("·¥ú·¥ò·¥Ö·¥Ä·¥õ…™…¥…¢ ·¥Ä…¥·¥Ö  Ä·¥ás·¥õ·¥Ä Ä·¥õ…™…¥…¢...")
    
    try:
        # Perform git pull to update the code
        os.system("git pull")
        os.system(f"kill -9 {os.getpid()} && bash start.sh")
        await response.edit("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö ·¥Ä…¥·¥Ö  Ä·¥ás·¥õ·¥Ä Ä·¥õ·¥á·¥Ö  ü·¥è·¥Ñ·¥Ä ü ü è!")
    except Exception as e:
        await response.edit(f"“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ä…¥·¥Ö  Ä·¥ás·¥õ·¥Ä Ä·¥õ: {e}")

@BOT.on(events.NewMessage(pattern='/stop'))
async def stop_bot(event):
    # Check if the user is a SUDO_USER
    if event.sender_id not in SUDO_USERS:
        await event.reply(" è·¥è·¥ú ·¥Ä Ä·¥á …¥·¥è·¥õ ·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.")
        return

    response = await event.reply("s·¥õ·¥è·¥ò·¥ò…™…¥…¢  ô·¥è·¥õ...")
    
    try:
        # Kill the current process
        os.system(f"kill -9 {os.getpid()}")
    except Exception as e:
        LOGS.error(e)
        await response.edit(f"“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è s·¥õ·¥è·¥ò  ô·¥è·¥õ: {e}")
